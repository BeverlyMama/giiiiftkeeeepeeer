import logging
import asyncio
from aiogram import Bot, Dispatcher, F, types
from aiogram.client.default import DefaultBotProperties
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.enums import ParseMode, parse_mode
from aiohttp import web
import aiohttp

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
TOKEN = "8481984389:AAHX9_fXrgemHmPeHNuX7pd2xJ1ooDkYgp4"  # –≤—Å—Ç–∞–≤—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
IMAGE_URL = "https://imgur.com/a/A8aIr3k"  # –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –∫–∞—Ä—Ç–∏–Ω–∫–∏
WELCOME_TEXT = (
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GiftKeeperOTC ‚Äì –Ω–∞–¥–µ–∂–Ω—ã–π P2P-–≥–∞—Ä–∞–Ω—Ç\n\n"
    "üíº –ü–æ–∫—É–ø–∞–π—Ç–µ –∏ –ø—Ä–æ–¥–∞–≤–∞–π—Ç–µ –≤—Å—ë, —á—Ç–æ —É–≥–æ–¥–Ω–æ ‚Äì –±–µ–∑–æ–ø–∞—Å–Ω–æ!\n"
    "–û—Ç Telegram-–ø–æ–¥–∞—Ä–∫–æ–≤ –∏ NFT –¥–æ —Ç–æ–∫–µ–Ω–æ–≤ –∏ —Ñ–∏–∞—Ç–∞ ‚Äì —Å–¥–µ–ª–∫–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç –ª–µ–≥–∫–æ –∏ –±–µ–∑ —Ä–∏—Å–∫–∞.\n\n"
    "üîπ –£–¥–æ–±–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞–º–∏\n"
    "üîπ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n\n"
    "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ:"
)
UPTIME_URL = "https://replit.com/@artemhasanov201/GiftKeeperOTC#main.py"  # —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –¥–ª—è –ø–∏–Ω–≥–∞

# === –õ–û–ì–ò ===
logging.basicConfig(level=logging.INFO)

# === –ö–ù–û–ü–ö–ò (–ò–ù–õ–ê–ô–ù) ===
keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üì•–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –†–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏", callback_data="btn1")],
        [InlineKeyboardButton(text="üìÑ–°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É", callback_data="btn2")],
        [InlineKeyboardButton(text="üß∑–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞", callback_data="btn3")],
        [InlineKeyboardButton(text="üìû–¢–µ—Ö. –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="btn4")]
    ]
)

# === –ë–û–¢ ===
bot = Bot(
    token=TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher()

@dp.message(F.text == "/start")
async def start_cmd(message: types.Message):
    await message.answer_photo(
        photo=IMAGE_URL,
        caption=WELCOME_TEXT,
        reply_markup=keyboard
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ (–ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç)
@dp.callback_query()
async def handle_button(callback: types.CallbackQuery):
    await callback.answer(f"–¢—ã –Ω–∞–∂–∞–ª: {callback.data}")

# === WEB-–°–ï–†–í–ï–† –î–õ–Ø REPLIT ===
async def handle(request):
    return web.Response(text="Bot is running!")

async def start_webserver():
    app = web.Application()
    app.router.add_get("/", handle)
    runner = web.AppRunner(app)
    await runner.setup()
    site = web.TCPSite(runner, "0.0.0.0", 8080)
    await site.start()

# === –ü–ò–ù–ì UPTIMEROBOT ===
async def ping_uptime():
    async with aiohttp.ClientSession() as session:
        while True:
            try:
                async with session.get(UPTIME_URL) as resp:
                    logging.info(f"Uptime ping: {resp.status}")
            except Exception as e:
                logging.error(f"Ping error: {e}")
            await asyncio.sleep(300)  # –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç

# === –ó–ê–ü–£–°–ö ===
async def main():
    await start_webserver()
    asyncio.create_task(ping_uptime())  # –∑–∞–ø—É—Å–∫–∞–µ–º –ø–∏–Ω–≥
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
